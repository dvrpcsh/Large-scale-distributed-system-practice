spring:
    application:
        name: distributed-service

    datasource:
        # MySQL ?? ??
        url: jdbc:mysql://localhost:3306/music_share?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
        username: music_user
        password: star15321!

    jpa:
        # Hibernate ??
        hibernate:
            ddl-auto: update    # ???? ? validate? ?? ??
        show-sql: true
        properties:
            hibernate:
                format_sql: true

    redis:
        # Redis ?? ??
        host: localhost
        port: 6379

    kafka:
        bootstrap-servers: localhost:9092
        consumer:
            group-id: transaction-consumer-group
            auto-offset-reset: earliest
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        producer:
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.apache.kafka.common.serialization.StringSerializer


# JWT ?? ??
jwt:
    secret: YmFja2VuZF9zZWNyZXRfZm9yX2p3dF9hbmRfcmVmcmVzaF9zZWN1cml0eV9rZXkzMjMyMzIz
    expiration: 3600000              # Access Token ???? (1??)
    refresh-expiration: 1209600000   # Refresh Token ???? (2?)

#  ?? ?? ??
server:
    port: 8080